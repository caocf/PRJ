package com.hztuen.gh.activity;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.JSONObject;
import org.kymjs.kjframe.KJHttp;
import org.kymjs.kjframe.http.HttpCallBack;
import org.kymjs.kjframe.http.HttpParams;
import org.kymjs.kjframe.utils.KJLoger;

import com.hxkg.ghpublic.R;
import com.hztuen.gh.activity.Adapter.PopShipNameAdapter;
import com.hztuen.gh.contact.contants;
import com.hztuen.lvyou.utils.SystemStatic;
import com.hztuen.lvyou.utils.Util;

import android.app.Activity;
import android.content.Intent;
import android.graphics.drawable.PaintDrawable;
import android.os.Bundle;
import android.util.Log;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.PopupWindow.OnDismissListener;

/**
 * 发布货源信息界面
 * 
 * @author hztuen7
 *
 */
public class SendGoodsMsgActivity extends Activity implements OnClickListener {

	private Button face_talk, make_price, btn_post;
	private EditText edit_price;
	private TextView text_yuan, tv_line, tv_good_type, tv_hold_style, tv_start,
			tv_end;
	private RelativeLayout relative_title_final, post_msg,
			relativie_goods_type, relative_start, relative_end,
			relative_hold_style;
	private EditText tv_Title, tv_good_name, tv_Load, tv_Linkman, tv_Tel,
			tv_Remark;
	public ArrayList<String> from_lists;
	private PopShipNameAdapter fromAdapter;
	public PopupWindow popupWindowArea;
	private View contentView;
	private ListView listview_start;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_send_goods_msg);
		init();
	}

	private void init() {
		face_talk = (Button) findViewById(R.id.face_talk); // 面谈按钮
		make_price = (Button) findViewById(R.id.make_price);// 自定义价格按钮
		edit_price = (EditText) findViewById(R.id.edit_price);// 填写自定义价格
		text_yuan = (TextView) findViewById(R.id.text_yuan);// "元"
		tv_line = (TextView) findViewById(R.id.tv_line);// 横线
		
		
		face_talk.setBackgroundColor(getResources().getColor(
				R.color.home_second_header_color));
		make_price.setBackgroundColor(getResources().getColor(
				R.color.text_color_c));
		face_talk.setTextColor(getResources()
				.getColor(R.color.text_color_a));
		make_price.setTextColor(getResources().getColor(
				R.color.text_color_b));
		edit_price.setVisibility(View.GONE);
		text_yuan.setVisibility(View.GONE);
		tv_line.setVisibility(View.GONE);
		
		face_talk.setOnClickListener(this);
		make_price.setOnClickListener(this);

		tv_Title = (EditText) findViewById(R.id.text1_context);// 标题
		tv_good_type = (TextView) findViewById(R.id.text2_context);// 货物类型
		tv_good_name = (EditText) findViewById(R.id.text3_context);// 货物名字
		tv_Load = (EditText) findViewById(R.id.text4_context);// 填写重量

		tv_Linkman = (EditText) findViewById(R.id.text6_context);// 填写联系人
		tv_Tel = (EditText) findViewById(R.id.text8_context);// 填写联系方式
		
		tv_Tel.setText(SystemStatic.phoneNum);
		
		tv_Remark = (EditText) findViewById(R.id.text9_context);// 填写备注
		tv_hold_style = (TextView) findViewById(R.id.text15_context);// 包装方式
		tv_start = (TextView) findViewById(R.id.text16_context);// 填写发货港
		tv_end = (TextView) findViewById(R.id.text17_context);// 填写卸货港

		relativie_goods_type = (RelativeLayout) findViewById(R.id.relative2);//
		relativie_goods_type.setOnClickListener(this);

		relative_start = (RelativeLayout) findViewById(R.id.relative16);//
		relative_start.setOnClickListener(this);

		relative_end = (RelativeLayout) findViewById(R.id.relative17);//
		relative_end.setOnClickListener(this);

		relative_hold_style = (RelativeLayout) findViewById(R.id.relative15);//
		relative_hold_style.setOnClickListener(this);

		btn_post = (Button) findViewById(R.id.btn_post);
		btn_post.setOnClickListener(this);

		from_lists = new ArrayList<String>();
		fromAdapter = new PopShipNameAdapter(this, from_lists, 6);

		relative_title_final = (RelativeLayout) findViewById(R.id.relative_title_final);
		relative_title_final.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				finish();

			}
		});
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		// 点击面议
		case R.id.face_talk:
			face_talk.setBackgroundColor(getResources().getColor(
					R.color.home_second_header_color));
			make_price.setBackgroundColor(getResources().getColor(
					R.color.text_color_c));
			face_talk.setTextColor(getResources()
					.getColor(R.color.text_color_a));
			make_price.setTextColor(getResources().getColor(
					R.color.text_color_b));
			edit_price.setVisibility(View.GONE);
			text_yuan.setVisibility(View.GONE);
			tv_line.setVisibility(View.GONE);

			break;
		// 点击自定义价格
		case R.id.make_price:
			make_price.setBackgroundColor(getResources().getColor(
					R.color.home_second_header_color));
			face_talk.setBackgroundColor(getResources().getColor(
					R.color.text_color_c));
			make_price.setTextColor(getResources().getColor(
					R.color.text_color_a));
			face_talk.setTextColor(getResources()
					.getColor(R.color.text_color_b));
			edit_price.setVisibility(View.VISIBLE);
			text_yuan.setVisibility(View.VISIBLE);
			tv_line.setVisibility(View.VISIBLE);
			break;
		// 点击提交按钮
		case R.id.btn_post:

			SendGoodsMsgTask();
			break;
		// 点击货物类型
		case R.id.relative2:

			String ac0 = "不限";
			String ac1 = "液体货";
			String ac2 = "间杂货";
			String ac3 = "散货";
			from_lists.add(ac0);
			from_lists.add(ac1);
			from_lists.add(ac2);
			from_lists.add(ac3);

			popcontent(1);

			break;
		// 点击发货港
		case R.id.relative16:

			String a1 = "杭州";
			String a2 = "宁波";
			String a3 = "绍兴";
			String a4 = "湖州";
			String a5 = "嘉兴";
			String a6 = "金华";
			String a7 = "衢州";
			String a8 = "台州";
			String a9 = "丽水";
			String a10 = "舟山";

			from_lists.add(a1);
			from_lists.add(a2);
			from_lists.add(a3);
			from_lists.add(a4);
			from_lists.add(a5);
			from_lists.add(a6);
			from_lists.add(a7);
			from_lists.add(a8);
			from_lists.add(a9);
			from_lists.add(a10);
			popcontent(2);
			break;
		// 点击卸货港
		case R.id.relative17:

			String ab1 = "杭州";
			String ab2 = "宁波";
			String ab3 = "绍兴";
			String ab4 = "湖州";
			String ab5 = "嘉兴";
			String ab6 = "金华";
			String ab7 = "衢州";
			String ab8 = "台州";
			String ab9 = "丽水";
			String ab10 = "舟山";

			from_lists.add(ab1);
			from_lists.add(ab2);
			from_lists.add(ab3);
			from_lists.add(ab4);
			from_lists.add(ab5);
			from_lists.add(ab6);
			from_lists.add(ab7);
			from_lists.add(ab8);
			from_lists.add(ab9);
			from_lists.add(ab10);
			popcontent(3);
			break;
		case R.id.relative15:
			String d1 = "散货";
			String d2 = "整箱";
			String d3 = "拼箱";
			String d4 = "桶装";
			String d5 = "灌装";
			String d6 = "其他";

			from_lists.add(d1);
			from_lists.add(d2);
			from_lists.add(d3);
			from_lists.add(d4);
			from_lists.add(d5);
			from_lists.add(d6);
			popcontent(4);
			break;
		default:
			break;
		}

	}

	// popwindow弹出框
	private void popcontent(final int k) {
		contentView = getLayoutInflater().inflate(R.layout.pop_from, null);
		TextView pop_dis6 = (TextView) contentView.findViewById(R.id.pop_dis);
		listview_start = (ListView) contentView
				.findViewById(R.id.listview_start);
		
		TextView tv_title=(TextView)contentView.findViewById(R.id.textView2);
		
		
		if (k == 1) {			
			tv_title.setText("请选择货物种类");
			
		} else if (k == 2) {
			tv_title.setText("选择地区");
		} else if (k == 3) {
			tv_title.setText("选择地区");
		} else if (k == 4) {
			tv_title.setText("请选择包装形式");
		}
		listview_start.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				if (k == 1) {
					tv_good_type.setText(from_lists.get(position));
					
				} else if (k == 2) {
					tv_start.setText(from_lists.get(position));
				} else if (k == 3) {
					tv_end.setText(from_lists.get(position));
				} else if (k == 4) {
					tv_hold_style.setText(from_lists.get(position));
				}
				popupWindowArea.dismiss();
				from_lists.clear();

			}
		});

		listview_start.setAdapter(fromAdapter);
		// listview_goodsname.setAdapter(goodsnameAdapter);
		pop_dis6.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {

				WindowManager.LayoutParams lp = getWindow().getAttributes();
				lp.alpha = 1f;
				getWindow().setAttributes(lp);
				popupWindowArea.dismiss();
				from_lists.clear();

			}
		});

		LinearLayout parent6 = (LinearLayout) this
				.findViewById(R.id.father_send_good_msg);// 父窗口view
		popupWindowArea = new PopupWindow(contentView,
				parent6.getWidth() * 4 / 5, ViewGroup.LayoutParams.WRAP_CONTENT);
		popupWindowArea.setFocusable(true);
		popupWindowArea.setOutsideTouchable(true);
		popupWindowArea.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
		popupWindowArea.setBackgroundDrawable(new PaintDrawable());
		WindowManager.LayoutParams lp6 = getWindow().getAttributes();
		lp6.alpha = 0.5f;
		getWindow().setAttributes(lp6);

		popupWindowArea.setOnDismissListener(new OnDismissListener() {

			@Override
			public void onDismiss() {
				WindowManager.LayoutParams lp = getWindow().getAttributes();
				lp.alpha = 1f;
				getWindow().setAttributes(lp);
			}
		});

		popupWindowArea.showAtLocation(parent6, Gravity.TOP, 0,
				parent6.getHeight() * 1 / 8);
	}

	// 发布货源信息
	private void SendGoodsMsgTask() {

		// TODO Auto-generated method stub

		// 访问网络
		String Title = tv_Title.getText().toString();
		String Type = tv_good_type.getText().toString();
		String Name = tv_good_name.getText().toString();
		String Tons = tv_Load.getText().toString();
		
		
		String Package = tv_hold_style.getText().toString();
		String From = tv_start.getText().toString();
		String To = tv_end.getText().toString();
		
		
		String Price = edit_price.getText().toString();
		String Linkman = tv_Linkman.getText().toString();
		String Tel = tv_Tel.getText().toString();
		String Remark = tv_Remark.getText().toString();

		if (Title.equals("") || Type.equals("") || Name.equals("")
				|| Tons.equals("") || Tel.equals("")
				|| Package.equals("")||From.equals("")) {
			Toast.makeText(getApplicationContext(), "请完善必填信息",
					Toast.LENGTH_SHORT).show();
		} else {
			KJHttp kjh = new KJHttp();
			List<String> aa = new ArrayList<String>();
			aa.add("Title=" + Title);
			aa.add("Type=" + Type);
			aa.add("Name=" + Name);
			aa.add("Tons=" + Tons);
			aa.add("Package=" + Package);
			aa.add("From=" + From);
			aa.add("To=" + To);			
			aa.add("Price=" + Price);
			aa.add("Linkman=" + Linkman);
			aa.add("Tel=" + Tel);			
			aa.add("Remark=" + Remark);
			aa.add("Userid=" + SystemStatic.userId);

			HttpParams params = null;
			try {
				params = Util.prepareKJparams(aa);
			} catch (Exception e) {
				e.printStackTrace();
			}
			// 访问地址
			String toUrl = contants.postgoods;
			if (!toUrl.equals("")) {
				kjh.post(toUrl, params, false, new HttpCallBack() {
					@Override
					public void onSuccess(Map<String, String> headers, byte[] t) {
						super.onSuccess(headers, t);
						// 获取cookie
						KJLoger.debug("===" + headers.get("Set-Cookie"));
						// Log.i(TAG+":kymjs---http", new String(t));
						String result = new String(t).trim();
						try {

							JSONObject res = new JSONObject(result);
							String resultcode = res.getString("resultcode");

							if (!"".equals(resultcode) && resultcode != null) {
								if ("-1".equals(resultcode)) {
									Toast.makeText(getApplicationContext(),
											"提交失败", Toast.LENGTH_SHORT).show();
								} else if (Integer.valueOf(resultcode)
										.intValue() > 0) {
									Toast.makeText(getApplicationContext(),
											"提交成功", Toast.LENGTH_SHORT).show();
									Intent intent_success = new Intent(
											getApplicationContext(),
											ShipGoodsCircleActivity.class);
									startActivity(intent_success);
								}
							} else {
								Toast.makeText(getApplicationContext(),
										"有错误，请检查", Toast.LENGTH_SHORT).show();
							}

						} catch (Exception e1) {
							e1.printStackTrace();
						}
					}

					@Override
					public void onFailure(int errorNo, String strMsg) {
						// 关闭进度条
						// Log.d(TAG, strMsg);
						// Util.getTip(cxt, errorNo+"");
						// mSVProgressHUD.showErrorWithStatus("验证过程出现问题");
						super.onFailure(errorNo, strMsg);
					}
				});
			}
		}
	}

}
