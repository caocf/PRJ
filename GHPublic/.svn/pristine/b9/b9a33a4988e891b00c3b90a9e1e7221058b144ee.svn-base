package com.hztuen.gh.activity;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.JSONException;
import org.json.JSONObject;
import org.kymjs.kjframe.KJHttp;
import org.kymjs.kjframe.http.HttpCallBack;
import org.kymjs.kjframe.http.HttpParams;
import org.kymjs.kjframe.utils.KJLoger;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.ab.activity.AbActivity;
import com.ab.util.AbDialogUtil;
import com.gh.modol.User;
import com.gh.modol.Usertype;
import com.gh.modol.goble.MainApp;
import com.hxkg.activity.water.WaterInfoActivity;
import com.hxkg.ghpublic.HomeActivity;
import com.hxkg.ghpublic.R;
import com.hztuen.gh.contact.Contact;
import com.hztuen.gh.contact.contants;
import com.hztuen.lvyou.utils.SystemStatic;
import com.hztuen.lvyou.utils.Util;
/**
 * @author zzq
 * @DateTime 2016年7月12日 下午3:58:24
 */
public class StartActivity extends AbActivity {
	private Button btnLogin;
	private Button btnRegist;
	private TextView visitor;
	private String username;
	private String password;
	private boolean flag = false;//用来判断是否退出
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);		


		setContentView(R.layout.activity_start);
		btnLogin = (Button) findViewById(R.id.login);
		btnRegist = (Button) findViewById(R.id.regist);
		visitor = (TextView) findViewById(R.id.visitor);	
		btnLogin.setOnClickListener(onclickner);
		btnRegist.setOnClickListener(onclickner);
		visitor.setOnClickListener(onclickner);
	}
	public void login(){
		//访问网络
		KJHttp kjh = new KJHttp();
		List<String> aa = new ArrayList<String>();
		aa.add("username="+username);
		aa.add("password="+password);
		HttpParams params = null;
		try {
			params = Util.prepareKJparams(aa);
		} catch (Exception e) {
			e.printStackTrace();
		}
		//访问地址
		String toUrl = contants.login_url;
		if(params == null){
			//提示参数制造失败
			Util.getTip(getApplicationContext(), "构造参数失败");
		}else if(!toUrl.equals("")){
			kjh.post(toUrl, params,false,new HttpCallBack() {
				@Override
				public void onSuccess(Map<String, String> headers, byte[] t) {
					super.onSuccess(headers, t);
					// 获取cookie
					KJLoger.debug("===" + headers.get("Set-Cookie"));
					String result = new String(t).trim();
					try {
						JSONObject resultJO = new JSONObject(result);
						JSONObject  res = new JSONObject(result);
						String resultcode = res.getString("resultcode");
						if(resultcode.equals("1")){
							JSONObject rc=res.getJSONObject("obj");
							Log.i("GH_TEXT", "11111111111111111");
							SystemStatic.userId=rc.getLong("userid");
							SystemStatic.userName=rc.getString("username");
							SystemStatic.phoneNum=rc.getString("tel");
							Log.i("GH_TEXT", "UserId="+SystemStatic.userId+"   "+"UserName="+SystemStatic.userName);
							User user = new User();
							user.setUserid(rc.getLong("userid"));
							user.setUsername(rc.getString("username"));
							user.setPassword(rc.getString("password"));
							user.setTel(rc.getString("tel"));
							JSONObject usertpyeob = rc.getJSONObject("usertype");
							Usertype usertype = new Usertype();
							usertype.setId(usertpyeob.getInt("id"));
							SystemStatic.usertypeId = usertpyeob.getString("id");
							usertype.setTypename(usertpyeob.getString("typename"));
							usertype.setBindclass(usertpyeob.getString("bindclass"));
							user.setUsertype(usertype);
							MainApp.userType = usertype.getId();
							System.out.println(result);
							Intent mIntent = new Intent();
							mIntent.setClass(getApplicationContext(), HomeActivity.class);
							startActivity(mIntent);
							AbDialogUtil.removeDialog(StartActivity.this);
						}else{
							SharedPreferences share = getSharedPreferences(Contact.user_ache, 0);
							Editor edit = share.edit();
							edit.clear();
							Intent intent = new Intent();
							intent.setClass(getApplicationContext(), LoginActivity.class);
							startActivity(intent);
						}
					} catch (JSONException e1) {
						e1.printStackTrace();
					} catch (Exception e1) {
						e1.printStackTrace();
					}
				}
				@Override
				public void onFailure(int errorNo, String strMsg) {
					//关闭进度条
					super.onFailure(errorNo, strMsg);
				}
			});
		}
	}
	public OnClickListener onclickner = new OnClickListener(){
		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			switch (v.getId()){
			case R.id.login:
				Intent intent = new Intent();
				intent.setClass(StartActivity.this, LoginActivity.class);
				startActivity(intent);
				break;
			case R.id.regist:
				startActivity(new Intent(StartActivity.this,RegistActivity.class));
				break;
			case R.id.visitor:
				SharedPreferences mShare = getSharedPreferences(Contact.user_ache, 0);
				Editor edit = mShare.edit();
				MainApp.userType = 0;
				edit.putString("visit", "visit");
				edit.commit();
				SystemStatic.usertypeId = "0";
				SystemStatic.userName = "";
				Intent mIntent = new Intent();
				mIntent.setClass(getApplicationContext(), HomeActivity.class);
				startActivity(mIntent);
				break;
			default:
				break;
			}
		}
	};
	@Override  
	public boolean onKeyDown(int keyCode, KeyEvent event)  
	{  
		if (keyCode == KeyEvent.KEYCODE_BACK )  
		{  
			Intent intent=new Intent(Intent.ACTION_MAIN);
			intent.addCategory(Intent.CATEGORY_HOME);
			startActivity(intent);  
		}  

		return false;  

	}
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		SharedPreferences share = getSharedPreferences(Contact.user_ache, 0);
		flag = share.getBoolean("flag", false);
		if(flag){
			return;
		}else{
			if(!share.getString("username", "").equals("")){
				AbDialogUtil.showProgressDialog(StartActivity.this, 0,
						"登录中...");
				username = share.getString("username", "");
				password = share.getString("password", "");
				new Handler().postDelayed(new Runnable() {

					@Override
					public void run() {
						login();
						
					}
				}, 1000);
				return;
			}else if(share.getString("visit", "").equals("visit")){
				AbDialogUtil.showProgressDialog(StartActivity.this, 0,
						"登录中...");
				SharedPreferences mShare = getSharedPreferences(Contact.user_ache, 0);
				Editor edit = mShare.edit();
				edit.putString("visit", "visit");
				edit.commit();
				SystemStatic.usertypeId = "0";
				SystemStatic.userName = "";
				new Handler().postDelayed(new Runnable() {

					@Override
					public void run() {
						Intent mIntent = new Intent();
						mIntent.setClass(getApplicationContext(), HomeActivity.class);
						startActivity(mIntent);
						AbDialogUtil.removeDialog(StartActivity.this);
					}
				}, 1000);
				
				return;
			}
		}
		
	}  

}
