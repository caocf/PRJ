package com.hxkg.ghpublic;



import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Map;

import net.hxkg.network.MService;

import org.json.JSONArray;
import org.json.JSONObject;
import org.kymjs.kjframe.KJHttp;
import org.kymjs.kjframe.http.HttpCallBack;
import org.kymjs.kjframe.utils.KJLoger;

import android.app.FragmentManager;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.Window;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.ab.activity.AbActivity;
import com.ab.task.AbTask;
import com.ab.task.AbTaskItem;
import com.ab.task.AbTaskListener;
import com.amap.api.location.AMapLocation;
import com.amap.api.location.AMapLocationClient;
import com.amap.api.location.AMapLocationClientOption;
import com.amap.api.location.AMapLocationClientOption.AMapLocationMode;
import com.amap.api.location.AMapLocationListener;
import com.amap.api.maps.AMap;
import com.amap.api.maps.LocationSource;
import com.amap.api.maps.LocationSource.OnLocationChangedListener;
import com.amap.api.maps.MapView;
import com.amap.api.maps.model.BitmapDescriptorFactory;
import com.amap.api.maps.model.MyLocationStyle;
import com.amap.api.services.core.LatLonPoint;
import com.amap.api.services.weather.LocalDayWeatherForecast;
import com.amap.api.services.weather.LocalWeatherForecast;
import com.amap.api.services.weather.LocalWeatherForecastResult;
import com.amap.api.services.weather.LocalWeatherLive;
import com.amap.api.services.weather.LocalWeatherLiveResult;
import com.amap.api.services.weather.WeatherSearch;
import com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener;
import com.amap.api.services.weather.WeatherSearchQuery;
import com.amap.map3d.demo.util.ToastUtil;
import com.gh.modol.Forecast;
import com.gh.modol.Usertype;
import com.gh.modol.goble.MainApp;
import com.hztuen.gh.activity.StartActivity;
import com.hztuen.lvyou.utils.SystemStatic;
import com.hztuen.lvyou.utils.Util;
import com.hztuen.position.PositionActivity;




public class HomeActivity extends AbActivity implements 
OnWeatherSearchListener,
//Listener<JSONObject>,
//ErrorListener,
LocationSource,AMapLocationListener{	
	public static final String TAG = HomeActivity.class.getSimpleName();
	public static HomeActivity homeActivity;
	public static String city="嘉兴";//唯一保存在主页的数据
	private String city_postion = "";
	private SharedPreferences preferences;
	private Button cityButton;//城市选择按钮
	private Forecast fc = new Forecast();
	private final static int POSITION_CITY = 1001;
	private MapView mapView;
	private AMap aMap;
	/**
	 * 地图定位相关 
	 * */
	private OnLocationChangedListener mListener;
	private AMapLocationClient mlocationClient;
	private AMapLocationClientOption mLocationOption;
	/**
	 * 天气相关
	 * */
	private WeatherSearchQuery mquery;
	private WeatherSearch mweathersearch;
	private LocalWeatherLive weatherlive; 
	private LocalWeatherForecast weatherforecast;
	private List<LocalDayWeatherForecast> forecastlist = null;

	Usertype usertype = new Usertype();
	//	private List<Forecast> forec = new ArrayList<Forecast>();

	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		homeActivity=this;
		this.requestWindowFeature(Window.FEATURE_NO_TITLE);
		super.onCreate(savedInstanceState);
		setAbContentView(R.layout.activity_home);
		//		this.setContentView(R.layout.activity_home);

		mapView = (MapView) findViewById(R.id.map);
		mapView.setVisibility(View.GONE);
		mapView.onCreate(savedInstanceState);// 此方法必须重写
		/*启动推送服务*/
		initService();
		/*初始化地图*/
		initMap();
		//获取上次选择的城市
		preferences= getSharedPreferences("Data", 0);
		city=preferences.getString("cityname", "");
		cityButton=(Button) this.findViewById(R.id.ivTitleBtnLeft);	
		cityButton.setOnClickListener(new View.OnClickListener() 
		{			
			@Override
			public void onClick(View arg0) 
			{
				//这里替换为城市选择页面
				Intent intent = new Intent();
				//				if(city_postion == ""){
				//					Toast.makeText(getApplicationContext(), "定位中，请稍后。。", Toast.LENGTH_SHORT).show();
				//					return;
				//				}
				//				intent.putExtra("city", city_postion);
				intent.setClass(HomeActivity.this,PositionActivity.class);
				startActivityForResult(intent, POSITION_CITY);
			}
		});
		//根据用户类型设置主视图
		FragmentManager fragmentManager = getFragmentManager();
		switch(MainApp.userType)
		{
		case 0://游客
		{
			fragmentManager.beginTransaction().replace(R.id.fragment_content, new MainFragmentVisitor()) 
			.replace(R.id.fragment_optionbar, new OptionFragmentShipAndWharf()).commit();
			break;
		}
		case 1://船户
		{
			fragmentManager.beginTransaction().replace(R.id.fragment_content, new MainFragmentShip()) 
			.replace(R.id.fragment_optionbar, new OptionFragmentShipAndWharf()).commit();
			break;
		}
		case 2://码头
		{
			fragmentManager.beginTransaction().replace(R.id.fragment_content, new MainFragmentWharf()) 
			.replace(R.id.fragment_optionbar, new OptionFragmentShipAndWharf()).commit();
			break;
		}
		case 3://沿海用户
		{
			fragmentManager.beginTransaction().replace(R.id.fragment_content, new MainFragmentCoastal()) 
			.replace(R.id.fragment_optionbar, new OptionFragmentShipAndWharf()).commit();
			break;
		}
		}	
	}
	/**
	 * 启动推送消息服务服务
	 */
	private void initService() {
		Intent intent = new Intent(HomeActivity.this, MService.class);  
		// 启动服务  
		startService(intent);  
	}
	/**
	 * 初始化地图
	 * */
	public void initMap(){
		if (aMap == null) {
			aMap = mapView.getMap();
			setUpMap();
		}
	}
	/**
	 * 设置一些amap的属性
	 */
	private void setUpMap() {
		// 自定义系统定位小蓝点
		MyLocationStyle myLocationStyle = new MyLocationStyle();
		myLocationStyle.myLocationIcon(BitmapDescriptorFactory
				.fromResource(R.drawable.ic_map_point));// 设置小蓝点的图标
		myLocationStyle.strokeColor(Color.BLACK);// 设置圆形的边框颜色
		myLocationStyle.strokeWidth(1.0f);// 设置圆形的边框粗细
		aMap.setMyLocationStyle(myLocationStyle);
		aMap.setLocationSource(this);// 设置定位监听
		aMap.getUiSettings().setMyLocationButtonEnabled(true);// 设置默认定位按钮是否显示
		aMap.setMyLocationEnabled(true);//显示定位层并且可以触发定位,默认是flase 
		aMap.setMyLocationEnabled(true);// 设置为true表示显示定位层并可触发定位，false表示隐藏定位层并不可触发定位，默认是false
	}
	/**
	 * 方法必须重写
	 * 
	 */
	@Override
	protected void onPause() {
		super.onPause();
		mapView.onPause();
		deactivate();
	}
	/**
	 * 方法必须重写
	 */
	@Override
	protected void onSaveInstanceState(Bundle outState) {
		super.onSaveInstanceState(outState);
		mapView.onSaveInstanceState(outState);
	}
	@Override
	protected void onResume()
	{
		super.onResume();

		if(SystemStatic.usertypeId.equals("")){
			Intent intent = new Intent();
			intent.setClass(getApplicationContext(), StartActivity.class);
			startActivity(intent);
			homeActivity.finish();
		}
		mapView.onResume();
		//设置城市text
		cityButton.setText(city);
		//天气查询高德地图
		//		searchliveweather();
		//天气查询2
		//		new Thread(new Runnable() {
		//
		//			@Override
		//			public void run() {
		//				weather();
		//			}
		//		}).start();


		//天气查询3
		AbTask task = AbTask.newInstance();
		//定义异步执行的对象
		final AbTaskItem item = new AbTaskItem();
		item.setListener(new AbTaskListener() {

			@Override
			public void get() {
				try {
					//下面写要执行的代码，如下载数据
					weather();
				} catch (Exception e) {
				}
			};
		});
		task.execute(item);
		//天气查询4
		//		WeatherQuery.query(this, city, this, this);
	}
	protected void onActivityResult(int requestCode, int resultCode, Intent data)
	{
		//super.onActivityResult(requestCode, resultCode, data);	
		switch (resultCode) {
		case 1001:
			city="杭州";
			cityButton.setText("杭州");
			break;
		case 1002:
			city="宁波";
			cityButton.setText("宁波");
			break;
		case 1003:
			city="温州";
			cityButton.setText("温州");
			break;
		case 1004:
			city="绍兴";
			cityButton.setText("绍兴");
			break;
		case 1005:
			city="湖州";
			cityButton.setText("湖州");
			break;
		case 1006:
			city="嘉兴";
			cityButton.setText("嘉兴");
			break;
		case 1007:
			city="金华";
			cityButton.setText("金华");
			break;
		case 1008:
			city="衢州";
			cityButton.setText("衢州");
			break;
		case 1009:
			city="台州";
			cityButton.setText("台州");
			break;
		case 1010:
			city="丽水";
			cityButton.setText("丽水");
			break;
		case 1011:
			city="舟山";
			cityButton.setText("舟山");
			break;
		default:
			break;
		}
		SharedPreferences.Editor edit=preferences.edit();
		edit.putString("cityname", city);
		edit.commit();
	}

	@Override  
	protected void onDestroy()
	{  
		super.onDestroy();  
		//保存选择的城市
		SharedPreferences.Editor edit=preferences.edit();
		edit.putString("cityname", city);
		edit.commit();
		mapView.onDestroy();
	}

	//	@Override
	//	public void onResponse(JSONObject json) 
	//	{
	//		// 天气查询结果处理,更新视图
	//		Log.e("kko", json.toString());	
	//		View v = getLayoutInflater().inflate(R.layout.framelayout_tianqi, null);
	//		FrameLayout weatherLayout=(FrameLayout) this.findViewById(R.id.weatherviewcontaner); 
	//		TextView tianqi = (TextView) v.findViewById(R.id.tianqi);
	//		String result = json.toString().trim();
	//		try {
	//			JSONObject res = new JSONObject(result);
	//			JSONObject data = res.getJSONObject("data");
	//			JSONArray forecast = data.getJSONArray("forecast");
	//			JSONObject temp = forecast.getJSONObject(0);
	//			//			WeatherReport wp = new WeatherReport();
	//
	//			fc.setLow(temp.getString("low"));
	//			fc.setHigh(temp.getString("high"));
	//			fc.setType(temp.getString("type"));
	//			fc.setFengxiang(temp.getString("fengxiang"));
	//			fc.setFengli(temp.getString("fengli"));
	//			//			forec.add(fc);
	//			weatherLayout=(FrameLayout) this.findViewById(R.id.weatherviewcontaner); 
	//			//这里添加天气视图
	//			TextView wendu = (TextView) v.findViewById(R.id.wendu);
	//			/*
	//			 * 时间
	//			 * */
	//			TextView shijian = (TextView) v.findViewById(R.id.shijian);
	//			Calendar c = Calendar.getInstance();
	//			int month = c.get(Calendar.MONTH)+1;
	//			int day = c.get(Calendar.DAY_OF_MONTH);
	//			int hour = c.get(Calendar.HOUR_OF_DAY);
	//			if(month<10){
	//				shijian.setText(day+"/"+"0"+month+" "+hour+":00更新");
	//			}else if(day<10&&month<10){
	//				shijian.setText("0"+day+"/"+"0"+month+" "+hour+":00更新");
	//			}else if(day<10){
	//				shijian.setText("0"+day+"/"+month+" "+hour+":00更新");
	//			}else{
	//				shijian.setText(day+"/"+month+" "+hour+":00更新");
	//			}
	//			/**
	//			 * 天气
	//			 * */
	//
	//			if(fc.getType().equals("晴")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww0);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}else if(fc.getType().equals("多云")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww1);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("阴")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww2);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("阵雨")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww3);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("雷阵雨")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww4);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("雷阵雨伴有冰雹")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww5);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("雨夹雪")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww6);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("小雨")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww7);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("中雨")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww8);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("大雨")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww9);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("暴雨")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww10);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("大暴雨")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww10);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("特大暴雨")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww10);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("阵雪")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww13);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("小雪")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww14);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("中雪")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww15);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("大雪")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww16);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("暴雪")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww17);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("雾")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww18);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("冻雨")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww19);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("沙尘暴")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww20);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("浮尘")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww29);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("扬沙")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww30);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("强沙尘暴")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww30);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			else if(fc.getType().equals("霾")){
	//				Drawable drawable= getResources().getDrawable(R.drawable.ww50);
	//				drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
	//				tianqi.setCompoundDrawables(drawable, null, null, null);  
	//				tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
	//			}
	//			tianqi.setText(fc.getType()+" "+fc.getFengxiang()+" "+fc.getFengli());
	//			String diwen = (String) fc.getLow().subSequence(3, 5);
	//			String gaowen = (String) fc.getHigh().subSequence(3, 6);
	//			wendu.setText(diwen+"~"+gaowen);
	//			weatherLayout.addView(v);
	//		} catch (JSONException e) {
	//			// TODO Auto-generated catch block
	//			e.printStackTrace();
	//		}
	//	}
	//	@Override
	//	public void onErrorResponse(VolleyError arg0)
	//	{
	//		Toast.makeText(getApplicationContext(), "天气加载失败", Toast.LENGTH_SHORT).show();
	//		// 天气查询失败处理		
	//	}


	@Override
	public void onLocationChanged(AMapLocation amapLocation) {
		// TODO Auto-generated method stub
		if (mListener != null && amapLocation != null) {
			if (amapLocation != null
					&& amapLocation.getErrorCode() == 0) {
				mListener.onLocationChanged(amapLocation);// 显示系统小蓝点
				//				city_postion = amapLocation.getCity();//城市信息
				SystemStatic.city = amapLocation.getCity();//城市信息
				city_postion = SystemStatic.city;
				SystemStatic.lp = new LatLonPoint(amapLocation.getLatitude(), amapLocation.getLongitude());
				//				System.out.println(city_postion);
				if(city==""){
					city = city_postion.substring(0, 2);
					cityButton.setText(city);
					new Thread(new Runnable() {

						@Override
						public void run() {
							weather();
						}
					}).start();					//					WeatherQuery.query(this, city, this, this);
				}
				deactivate();//停止定位
			} else {
				String errText = "定位失败," + amapLocation.getErrorCode()+ ": " + amapLocation.getErrorInfo();
				if(city==""){
					city = "杭州";
					cityButton.setText(city);
					new Thread(new Runnable() {

						@Override
						public void run() {
							weather();
						}
					}).start();
					//					WeatherQuery.query(this, city, this, this);
				}
				deactivate();//停止定位
				Log.e("AmapErr",errText);
			}
		}
	}
	@Override
	public void activate(OnLocationChangedListener listener) {
		// TODO Auto-generated method stub
		mListener = listener;
		if (mlocationClient == null) {
			mlocationClient = new AMapLocationClient(this);
			mLocationOption = new AMapLocationClientOption();
			//设置是否只定位一次,默认为false
			mLocationOption.setOnceLocation(false);         
			//设置是否强制刷新WIFI，默认为强制刷新
			mLocationOption.setWifiActiveScan(true);
			//设置定位监听
			mlocationClient.setLocationListener(this);
			//设置为高精度定位模式
			mLocationOption.setLocationMode(AMapLocationMode.Hight_Accuracy);
			//设置定位参数
			mLocationOption.setInterval(100);
			mlocationClient.setLocationOption(mLocationOption);
			// 此方法为每隔固定时间会发起一次定位请求，为了减少电量消耗或网络流量消耗，
			// 注意设置合适的定位时间的间隔（最小间隔支持为2000ms），并且在合适时间调用stopLocation()方法来取消定位请求
			// 在定位结束后，在合适的生命周期调用onDestroy()方法
			// 在单次定位情况下，定位无论成功与否，都无需调用stopLocation()方法移除请求，定位sdk内部会移除
			mlocationClient.startLocation();
		}
	}
	@Override
	public void deactivate() {
		// TODO Auto-generated method stub
		mListener = null;
		if (mlocationClient != null) {
			mlocationClient.stopLocation();
			mlocationClient.onDestroy();
		}
		mlocationClient = null;
	}

	/**
	 * 按键点击回调事件,当按下回退键时显示是否退出
	 */
	private long exitTime;

	@Override
	public boolean dispatchKeyEvent(KeyEvent event) {
		if (event.getKeyCode() == KeyEvent.KEYCODE_BACK
				&& event.getAction() == KeyEvent.ACTION_DOWN
				&& event.getRepeatCount() == 0) {
			if (System.currentTimeMillis() - exitTime > 3000) {
				Toast.makeText(getApplicationContext(), "再按一次退出程序",
						Toast.LENGTH_SHORT).show();
				exitTime = System.currentTimeMillis();
			} else {

				Intent intent=new Intent(Intent.ACTION_MAIN);
				intent.addCategory(Intent.CATEGORY_HOME);
				startActivity(intent);
			}
			return false;
		}
		return super.dispatchKeyEvent(event);
	}
	/**
	 * 查新实时天气
	 * */
	private void searchliveweather() {
		mquery = new WeatherSearchQuery(city, WeatherSearchQuery.WEATHER_TYPE_LIVE);//检索参数为城市和天气类型，实时天气为1、天气预报为2
		mweathersearch=new WeatherSearch(this);
		mweathersearch.setOnWeatherSearchListener(this);
		mweathersearch.setQuery(mquery);
		mweathersearch.searchWeatherAsyn(); //异步搜索   
	}
	@Override
	public void onWeatherForecastSearched(LocalWeatherForecastResult arg0,
			int arg1) {
		// TODO Auto-generated method stub

	}
	@Override
	public void onWeatherLiveSearched(LocalWeatherLiveResult weatherLiveResult ,int rCode) {
		View v = getLayoutInflater().inflate(R.layout.framelayout_tianqi, null);
		FrameLayout weatherLayout=(FrameLayout) this.findViewById(R.id.weatherviewcontaner); 
		TextView wendu = (TextView) v.findViewById(R.id.wendu);
		TextView tianqi = (TextView) v.findViewById(R.id.tianqi);
		TextView shijian = (TextView) v.findViewById(R.id.shijian);
		if (rCode == 1000) {
			if (weatherLiveResult != null && weatherLiveResult.getLiveResult() != null) {
				weatherlive = weatherLiveResult.getLiveResult();
				shijian.setText("更新于: "+weatherlive.getReportTime().substring(5, 16));
				tianqi.setText(weatherlive.getWeather()+"  "+weatherlive.getWindDirection()+"风   "+weatherlive.getWindPower()+"级");
				wendu.setText(weatherlive.getTemperature()+"℃");
				/**
				 * 天气
				 * */

				if(weatherlive.getWeather().equals("晴")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww0);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}else if(weatherlive.getWeather().equals("多云")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww1);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("阴")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww2);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("阵雨")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww3);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("雷阵雨")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww4);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("雷阵雨伴有冰雹")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww5);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("雨夹雪")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww6);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("小雨")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww7);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("中雨")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww8);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("大雨")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww9);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("暴雨")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww10);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("大暴雨")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww10);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("特大暴雨")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww10);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("阵雪")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww13);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("小雪")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww14);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("中雪")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww15);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("大雪")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww16);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("暴雪")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww17);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("雾")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww18);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("冻雨")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww19);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("沙尘暴")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww20);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("浮尘")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww29);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("扬沙")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww30);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("强沙尘暴")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww30);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				else if(weatherlive.getWeather().equals("霾")){
					Drawable drawable= getResources().getDrawable(R.drawable.ww50);
					drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
					tianqi.setCompoundDrawables(drawable, null, null, null);  
					tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
				}
				weatherLayout.addView(v);
			}else {
				Toast.makeText(getApplicationContext(), "天气加载失败", Toast.LENGTH_SHORT).show();
			}
		}else {
			ToastUtil.showerror(HomeActivity.this, rCode);
		} 
	}
	public void weather(){
		//访问网络
		KJHttp kj = new KJHttp();
		List<String> aa = new ArrayList<String>();
		aa.add("city="+city);
		//访问地址
		org.kymjs.kjframe.http.HttpParams params = null;
		try {
			params = Util.prepareKJparams(aa);
		} catch (Exception e) {
			e.printStackTrace();
		}
		//访问地址
		String toUrl = "http://wthrcdn.etouch.cn/weather_mini";
		if(params == null){
			//提示参数制造失败
			Util.getTip(getApplicationContext(), "构造参数失败");
		}else if(!toUrl.equals("")){
			kj.get(toUrl, params, false, new HttpCallBack(){

				@Override
				public void onSuccess(Map<String, String> headers, byte[] t) {
					// TODO Auto-generated method stub
					super.onSuccess(headers, t);

					KJLoger.debug("===" + headers.get("Set-Cookie"));
					Log.i(TAG+":kymjs---http", new String(t));

					View v = getLayoutInflater().inflate(R.layout.framelayout_tianqi, null);
					FrameLayout weatherLayout=(FrameLayout) findViewById(R.id.weatherviewcontaner); 
					TextView tianqi = (TextView) v.findViewById(R.id.tianqi);
					String result = new String(t).trim();
					try {
						JSONObject res = new JSONObject(result);
						JSONObject data = res.getJSONObject("data");
						JSONArray forecast = data.getJSONArray("forecast");
						JSONObject temp = forecast.getJSONObject(0);
						//			WeatherReport wp = new WeatherReport();

						fc.setLow(temp.getString("low"));
						fc.setHigh(temp.getString("high"));
						fc.setType(temp.getString("type"));
						fc.setFengxiang(temp.getString("fengxiang"));
						fc.setFengli(temp.getString("fengli"));
						//			forec.add(fc);
						weatherLayout=(FrameLayout) findViewById(R.id.weatherviewcontaner); 
						//这里添加天气视图
						TextView wendu = (TextView) v.findViewById(R.id.wendu);
						/*
						 * 时间
						 * */
						TextView shijian = (TextView) v.findViewById(R.id.shijian);
						Calendar c = Calendar.getInstance();
						int month = c.get(Calendar.MONTH)+1;
						int day = c.get(Calendar.DAY_OF_MONTH);
						int hour = c.get(Calendar.HOUR_OF_DAY);
						if(month<10){
							shijian.setText("0"+month+"/"+day+" "+hour+":00更新");
						}else if(day<10&&month<10){
							shijian.setText("0"+month+"/"+"0"+day+" "+hour+":00更新");
						}else if(day<10){
							shijian.setText(month+"/"+"0"+day+" "+hour+":00更新");
						}else{
							shijian.setText(month+day+"/"+" "+hour+":00更新");
						}
						/**
						 * 天气
						 * */

						if(fc.getType().equals("晴")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww0);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}else if(fc.getType().equals("多云")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww1);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("阴")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww2);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("阵雨")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww3);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("雷阵雨")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww4);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("雷阵雨伴有冰雹")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww5);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("雨夹雪")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww6);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("小雨")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww7);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("中雨")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww8);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("大雨")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww9);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("暴雨")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww10);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("大暴雨")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww10);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("特大暴雨")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww10);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("阵雪")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww13);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("小雪")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww14);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("中雪")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww15);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("大雪")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww16);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("暴雪")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww17);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("雾")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww18);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("冻雨")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww19);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("沙尘暴")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww20);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("浮尘")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww29);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("扬沙")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww30);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("强沙尘暴")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww30);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						else if(fc.getType().equals("霾")){
							Drawable drawable= getResources().getDrawable(R.drawable.ww50);
							drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());
							tianqi.setCompoundDrawables(drawable, null, null, null);  
							tianqi.setCompoundDrawablePadding(10);//设置图片和text之间的间距   
						}
						tianqi.setText(fc.getType()+" "+fc.getFengxiang()+" "+fc.getFengli());
						String diwen = (String) fc.getLow().subSequence(3, 5);
						String gaowen = (String) fc.getHigh().subSequence(3, 6);
						wendu.setText(diwen+"~"+gaowen);
						weatherLayout.addView(v);
					}catch(Exception e){
						e.printStackTrace();
					}
				}
			});

		}//else这里结束
	}
}
