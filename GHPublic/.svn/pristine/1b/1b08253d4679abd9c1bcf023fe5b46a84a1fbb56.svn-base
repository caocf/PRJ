package com.hztuen.gh.activity;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.kymjs.kjframe.KJHttp;
import org.kymjs.kjframe.http.HttpCallBack;
import org.kymjs.kjframe.http.HttpParams;
import org.kymjs.kjframe.utils.KJLoger;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.os.Handler;
import android.text.method.HideReturnsTransformationMethod;
import android.text.method.PasswordTransformationMethod;
import android.util.Log;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.ab.activity.AbActivity;
import com.ab.util.AbDialogUtil;
import com.gh.modol.MineShipModel;
import com.gh.modol.User;
import com.gh.modol.Usertype;
import com.gh.modol.goble.MainApp;
import com.hxkg.ghpublic.HomeActivity;
import com.hxkg.ghpublic.R;
import com.hztuen.gh.contact.Contact;
import com.hztuen.gh.contact.contants;
import com.hztuen.lvyou.utils.SystemStatic;
import com.hztuen.lvyou.utils.Util;

/**
 * @author zzq
 * @DateTime 2016年7月12日 下午4:14:04
 * 登录
 */
public class LoginActivity extends AbActivity{
	protected static final String TAG = LoginActivity.class.getSimpleName();
	private EditText name;
	private EditText pwd;
	private Button login;//登录按钮
	private CheckBox rePwd;//记住密码
	private TextView loginBack;//登录返回
	private ImageView pwd_eye;//密码加密按钮
	private boolean flag = false;//

	private TextView forget_password;
	private TextView uer_regist;
	User u = new User();
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);
		name = (EditText) findViewById(R.id.userName);
		pwd = (EditText) findViewById(R.id.userPwd);
		login = (Button) findViewById(R.id.login);
		loginBack = (TextView) findViewById(R.id.loginBack);
		pwd_eye = (ImageView) findViewById(R.id.pwd_eye);
		rePwd = (CheckBox) findViewById(R.id.repwd);
		forget_password = (TextView) findViewById(R.id.forget_password);
		uer_regist = (TextView) findViewById(R.id.uer_regist);
		init();
		login.setOnClickListener(onclickner);
		//忘记密码
		forget_password.setOnClickListener(onclickner);
		//用户注册
		uer_regist.setOnClickListener(onclickner);
		loginBack.setOnClickListener(onclickner);
		//pwd_eye.setOnClickListener(onclickner);
		pwd_eye.setOnClickListener(onclickner);
	}
	//	public OnTouchListener ontouch = new OnTouchListener() {
	//
	//		@Override
	//		public boolean onTouch(View v, MotionEvent event) {
	//			// TODO Auto-generated method stub
	//			switch (v.getId()) {
	//			case R.id.pwd_eye:
	//				if (event.getAction() == MotionEvent.ACTION_DOWN)  
	//				{   
	//					pwd_eye.setImageResource(R.drawable.icon_eye_open);
	//					pwd.setTransformationMethod(HideReturnsTransformationMethod.getInstance());
	//
	//					return true;  
	//				}else if (event.getAction() == MotionEvent.ACTION_UP){  
	//					pwd.setTransformationMethod(PasswordTransformationMethod.getInstance());
	//					pwd_eye.setImageResource(R.drawable.icon_eye_close);
	//					return true;  
	//				}
	//				break;
	//
	//			default:
	//				break;
	//			}
	//			return false;
	//		}
	//	};
	public void init(){
		SharedPreferences mShare = getSharedPreferences(Contact.user_ache, Context.MODE_PRIVATE);
		if(mShare.getAll().size()>0){
			name.setText(mShare.getString("username", null));
			pwd.setText(mShare.getString("password", null));
			rePwd.setChecked(mShare.getBoolean("rePwd", false));
		}
		return;
	}
	public OnClickListener onclickner = new OnClickListener(){

		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			switch(v.getId()){
			case R.id.login:
				AbDialogUtil.showProgressDialog(LoginActivity.this, 0,
						"登录中");
				CheckLogin();
				break;
			case R.id.loginBack:
				SharedPreferences mShare = getSharedPreferences(Contact.user_ache, 0);
				Editor edit = mShare.edit();
				edit.putString("visit", "");
				edit.commit();
				Intent intent = new Intent();
				intent.setClass(LoginActivity.this, StartActivity.class);
				startActivity(intent);
				break;	
			case R.id.forget_password:
				Intent mintent = new Intent();
				mintent.setClass(getApplicationContext(), ForgetPasswordActivity.class);
				startActivity(mintent);
				break;
			case R.id.uer_regist:
				Intent nintent = new Intent();
				nintent.setClass(getApplicationContext(), RegistActivity.class);
				startActivity(nintent);
				break;
			case R.id.pwd_eye:
				if(Switch()){
					pwd_eye.setImageResource(R.drawable.icon_eye_open);
					pwd.setTransformationMethod(HideReturnsTransformationMethod.getInstance());
				}else{
					pwd.setTransformationMethod(PasswordTransformationMethod.getInstance());
					pwd_eye.setImageResource(R.drawable.icon_eye_close);
				}
				break;
			default:
				break;
			}
		}

	};
	public void CheckLogin(){
		String userName = name.getText().toString();
		String userPwd = pwd.getText().toString();
		if(userName.equals("")||userPwd.equals("")){
			new Handler().postDelayed(new Runnable() {
				@Override
				public void run() {
					AbDialogUtil.removeDialog(LoginActivity.this);
					Toast.makeText(LoginActivity.this, "用户名不能为空或密码不能为空", Toast.LENGTH_LONG).show();
				}
			}, 1000);
			return;
		}
		//访问网络
		KJHttp kjh = new KJHttp();
		List<String> aa = new ArrayList<String>();
		aa.add("username="+userName);
		aa.add("password="+userPwd);
		HttpParams params = null;
		try {
			params = Util.prepareKJparams(aa);
		} catch (Exception e) {
			e.printStackTrace();
		}
		//访问地址
		String toUrl = contants.login_url;
		if(params == null){
			//提示参数制造失败
			Util.getTip(getApplicationContext(), "构造参数失败");
		}else if(!toUrl.equals("")){
			kjh.post(toUrl, params,false,new HttpCallBack() {
				@Override
				public void onSuccess(Map<String, String> headers, byte[] t) {
					super.onSuccess(headers, t);
					// 获取cookie
					KJLoger.debug("===" + headers.get("Set-Cookie"));
					Log.i(TAG+":kymjs---http", new String(t));
					String result = new String(t).trim();
					try {
						JSONObject resultJO = new JSONObject(result);
						Log.i(TAG+":kymjs---resultMsg", resultJO.toString());
						JSONObject  res = new JSONObject(result);
						String resultcode = res.getString("resultcode");
						if(resultcode.equals("1")){


							JSONObject rc=res.getJSONObject("obj");
							Log.i("GH_TEXT", "11111111111111111");
							SystemStatic.userId=rc.getLong("userid");
							SystemStatic.userName=rc.getString("username");
							SystemStatic.phoneNum=rc.getString("tel");
							Log.i("GH_TEXT", "UserId="+SystemStatic.userId+"   "+"UserName="+SystemStatic.userName);
							User user = new User();
							user.setUserid(rc.getLong("userid"));
							user.setUsername(rc.getString("username"));
							user.setPassword(rc.getString("password"));
							user.setTel(rc.getString("tel"));
							JSONObject usertpyeob = rc.getJSONObject("usertype");
							Usertype usertype = new Usertype();
							usertype.setId(usertpyeob.getInt("id"));
							SystemStatic.usertypeId = usertpyeob.getString("id");
							usertype.setTypename(usertpyeob.getString("typename"));
							usertype.setBindclass(usertpyeob.getString("bindclass"));
							user.setUsertype(usertype);
							MainApp.userType = usertype.getId();
							if(rePwd.isChecked()){
								//轻量级缓存
								SharedPreferences mSharedPreferences = getSharedPreferences(Contact.user_ache, Context.MODE_PRIVATE);
								Editor edit  = mSharedPreferences.edit();		
								edit.clear();
								edit.putString("username", user.getUsername().toString());
								edit.putString("password", user.getPassword().toString());
								edit.putBoolean("rePwd", true);
								edit.commit();  								
							}else{
								SharedPreferences mShare = getSharedPreferences(Contact.user_ache, Context.MODE_PRIVATE);
								Editor edit = mShare.edit();
								if(mShare.getAll().size()>0){
									//									edit.putString("password", "");
									edit.clear();
									edit.commit();
								}
							}
							new Handler().postDelayed(new Runnable() {
								@Override
								public void run() {
									AbDialogUtil.removeDialog(LoginActivity.this);
									Toast.makeText(LoginActivity.this, "登录成功", Toast.LENGTH_LONG).show();
									Intent mIntent = new Intent();
									mIntent.setClass(getApplicationContext(), HomeActivity.class);
									startActivity(mIntent);
								}
							}, 1000);

						}else
							if(resultcode.equals("-1")){
								Toast.makeText(getApplicationContext(), "用户不存在,请重新输入", Toast.LENGTH_SHORT).show();
								AbDialogUtil.removeDialog(LoginActivity.this);
							}else if(resultcode.equals("-2")){
								Toast.makeText(getApplicationContext(), "密码错误，请重新输入", Toast.LENGTH_SHORT).show();
								AbDialogUtil.removeDialog(LoginActivity.this);
							}
					} catch (JSONException e1) {
						AbDialogUtil.removeDialog(LoginActivity.this);
						e1.printStackTrace();
					} catch (Exception e1) {
						AbDialogUtil.removeDialog(LoginActivity.this);
						Toast.makeText(getApplicationContext(), "您的网络不稳定，请检查网络", Toast.LENGTH_SHORT).show();
						e1.printStackTrace();
					}
				}
				@Override
				public void onFailure(int errorNo, String strMsg) {
					//关闭进度条
					Log.d(TAG, strMsg);
					super.onFailure(errorNo, strMsg);
				}
			});
		}
	}	
	//
	//	@Override  
	//	public boolean onKeyDown(int keyCode, KeyEvent event)  
	//	{  
	//		if (keyCode == KeyEvent.KEYCODE_BACK )  
	//		{  
	//			SharedPreferences mShare = getSharedPreferences(Contact.user_ache, 0);
	//			Editor edit = mShare.edit();
	//			edit.putString("visit", "");
	//			edit.commit();
	//			Intent intent = new Intent();
	//			intent.setClass(LoginActivity.this, StartActivity.class);
	//			startActivity(intent);
	//		}  
	//
	//		return false;  
	//
	//	}  
	/**
	 * @return
	 * 眼睛开关
	 */
	public boolean Switch(){

		if(flag){
			flag = false;
		}else{
			flag = true;
		}
		return flag;

	}
}
