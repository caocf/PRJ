package com.hztuen.gh.activity;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONObject;
import org.kymjs.kjframe.KJHttp;
import org.kymjs.kjframe.http.HttpCallBack;
import org.kymjs.kjframe.http.HttpParams;
import org.kymjs.kjframe.utils.KJLoger;

import com.gh.modol.GoodsMode;
import com.gh.modol.ShipCircleListModel;
import com.gh.modol.ShipModel;
import com.hxkg.ghpublic.R;
import com.hztuen.gh.activity.Adapter.GoodsAdapter;
import com.hztuen.gh.activity.Adapter.PopShipNameAdapter;
import com.hztuen.gh.activity.Adapter.ShipAdapter;
import com.hztuen.gh.contact.contants;
import com.hztuen.lvyou.utils.SystemStatic;
import com.hztuen.lvyou.utils.Util;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.PopupWindow.OnDismissListener;

/**
 * 船货圈找货
 * 
 * @author hztuen7
 *
 */
public class FindGoodsActivity extends Activity implements OnClickListener {

	private GoodsAdapter goodsAdapter;
	private Button togglestart, toggleend, toggletype;
	public PopupWindow popupWindowArea;
	private View contentView;
	// public static FindShipActivity instance;
	private PopShipNameAdapter fromAdapter;
	private ListView listview_start, lv_find_goods;
	public ArrayList<String> from_lists;

	private RelativeLayout relative_title_final;
	private LinearLayout liner_case;
	private Boolean isStartOpen = false;
	private RelativeLayout relative_start, relative_end, relative_type;
	private TextView tv_start, tv_end, tv_type;
	private List<GoodsMode> modellist = new ArrayList<GoodsMode>();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_findgoods);
		init();
		// instance = this;
	}

	private void init() {

		goodsAdapter = new GoodsAdapter(getApplicationContext(), modellist);

		Toast.makeText(getApplicationContext(), "请选择发货港，卸货港和货物类型进行筛选",
				Toast.LENGTH_SHORT).show();
		togglestart = (Button) findViewById(R.id.togglestart);

		toggleend = (Button) findViewById(R.id.toggleend);

		toggletype = (Button) findViewById(R.id.toggletype);
		lv_find_goods = (ListView) findViewById(R.id.lv_find_goods);
		listview_start = (ListView) findViewById(R.id.listview_start);
		from_lists = new ArrayList<String>();
		fromAdapter = new PopShipNameAdapter(this, from_lists, 6);
		liner_case = (LinearLayout) findViewById(R.id.liner_case);

		relative_start = (RelativeLayout) findViewById(R.id.relative_start);
		relative_start.setOnClickListener(this);
		relative_end = (RelativeLayout) findViewById(R.id.relative_end);
		relative_end.setOnClickListener(this);
		relative_type = (RelativeLayout) findViewById(R.id.relative_type);
		relative_type.setOnClickListener(this);

		tv_start = (TextView) findViewById(R.id.tv_start);
		tv_end = (TextView) findViewById(R.id.tv_end);
		tv_type = (TextView) findViewById(R.id.tv_type);

		relative_title_final = (RelativeLayout) findViewById(R.id.relative_title_final);
		relative_title_final.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				finish();

			}
		});
	}

	@SuppressLint("ResourceAsColor")
	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.relative_start:
			from_lists.clear();
			if (isStartOpen == false) {
				tv_start.setTextColor(getResources().getColor(R.color.blue));
				tv_end.setTextColor(R.color.text_black_light);
				tv_type.setTextColor(R.color.text_black_light);
				togglestart.setBackgroundResource(R.drawable.up);
				toggleend.setBackgroundResource(R.drawable.ic_dropdown);
				toggletype.setBackgroundResource(R.drawable.ic_dropdown);

				String ac0 = "不限";
				String ac1 = "杭州";
				String ac2 = "宁波";
				String ac3 = "绍兴";
				String ac4 = "湖州";
				String ac5 = "嘉兴";
				String ac6 = "金华";
				String ac7 = "衢州";
				String ac8 = "台州";
				String ac9 = "丽水";
				String ac10 = "舟山";
				from_lists.add(ac0);
				from_lists.add(ac1);
				from_lists.add(ac2);
				from_lists.add(ac3);
				from_lists.add(ac4);
				from_lists.add(ac5);
				from_lists.add(ac6);
				from_lists.add(ac7);
				from_lists.add(ac8);
				from_lists.add(ac9);
				from_lists.add(ac10);

				contentView = getLayoutInflater().inflate(R.layout.pop_start,
						null);// 港口

				listview_start = (ListView) contentView
						.findViewById(R.id.listview_start);
				listview_start.setAdapter(fromAdapter);

				listview_start
						.setOnItemClickListener(new OnItemClickListener() {

							@Override
							public void onItemClick(AdapterView<?> parent,
									View view, int position, long id) {
								SystemStatic.goodsStart = from_lists
										.get(position);
								popupWindowArea.dismiss();
								tv_start.setTextColor(R.color.text_black_light);
								tv_end.setTextColor(R.color.text_black_light);
								tv_type.setTextColor(R.color.text_black_light);
								togglestart
										.setBackgroundResource(R.drawable.ic_dropdown);
								toggleend
										.setBackgroundResource(R.drawable.ic_dropdown);
								toggletype
										.setBackgroundResource(R.drawable.ic_dropdown);

								if (SystemStatic.goodsTaget == null) {
									Toast.makeText(getApplicationContext(),
											"请选择卸货港进行筛选", Toast.LENGTH_SHORT)
											.show();

								} else if (SystemStatic.goodsType == null) {
									Toast.makeText(getApplicationContext(),
											"请选择货物类型筛选", Toast.LENGTH_SHORT)
											.show();
								} else if (SystemStatic.goodsTaget != null
										&& SystemStatic.goodsStart != null
										&& SystemStatic.goodsType != null) {
									GetGoodsListTask();
								}

							}
						});

				LinearLayout parent6 = (LinearLayout) this
						.findViewById(R.id.findgoods_view);// 父窗口view
				popupWindowArea = new PopupWindow(contentView,
						parent6.getWidth(), ViewGroup.LayoutParams.WRAP_CONTENT);
				// popupWindowArea.setFocusable(true);
				// popupWindowArea.setOutsideTouchable(true);

				popupWindowArea.setTouchable(true);
				popupWindowArea.setTouchInterceptor(new OnTouchListener() {

					@Override
					public boolean onTouch(View v, MotionEvent event) {
						// TODO Auto-generated method stub
						return false;
					}
				});

				WindowManager.LayoutParams lp6 = getWindow().getAttributes();
				lp6.alpha = 1f;
				getWindow().setAttributes(lp6);

				popupWindowArea.setOnDismissListener(new OnDismissListener() {

					@Override
					public void onDismiss() {
						WindowManager.LayoutParams lp = getWindow()
								.getAttributes();
						lp.alpha = 1f;
						getWindow().setAttributes(lp);
					}
				});

				popupWindowArea.showAsDropDown(liner_case, 0, 0);
				isStartOpen = true;
			} else {
				popupWindowArea.dismiss();
				isStartOpen = false;
				from_lists.clear();

				tv_start.setTextColor(R.color.text_black_light);
				tv_end.setTextColor(R.color.text_black_light);
				tv_type.setTextColor(R.color.text_black_light);
				togglestart.setBackgroundResource(R.drawable.ic_dropdown);
				toggleend.setBackgroundResource(R.drawable.ic_dropdown);
				toggletype.setBackgroundResource(R.drawable.ic_dropdown);
			}
			break;
		case R.id.relative_end:
			from_lists.clear();

			if (isStartOpen == false) {

				tv_start.setTextColor(R.color.text_black_light);
				tv_end.setTextColor(getResources().getColor(R.color.blue));
				tv_type.setTextColor(R.color.text_black_light);
				togglestart.setBackgroundResource(R.drawable.ic_dropdown);
				toggleend.setBackgroundResource(R.drawable.up);
				toggletype.setBackgroundResource(R.drawable.ic_dropdown);

				String ac0 = "不限";
				String ac1 = "杭州";
				String ac2 = "宁波";
				String ac3 = "绍兴";
				String ac4 = "湖州";
				String ac5 = "嘉兴";
				String ac6 = "金华";
				String ac7 = "衢州";
				String ac8 = "台州";
				String ac9 = "丽水";
				String ac10 = "舟山";
				from_lists.add(ac0);
				from_lists.add(ac1);
				from_lists.add(ac2);
				from_lists.add(ac3);
				from_lists.add(ac4);
				from_lists.add(ac5);
				from_lists.add(ac6);
				from_lists.add(ac7);
				from_lists.add(ac8);
				from_lists.add(ac9);
				from_lists.add(ac10);

				contentView = getLayoutInflater().inflate(R.layout.pop_start,
						null);// 港口

				listview_start = (ListView) contentView
						.findViewById(R.id.listview_start);
				listview_start
						.setOnItemClickListener(new OnItemClickListener() {

							@Override
							public void onItemClick(AdapterView<?> parent,
									View view, int position, long id) {
								SystemStatic.goodsTaget = from_lists
										.get(position);
								popupWindowArea.dismiss();
								tv_start.setTextColor(R.color.text_black_light);
								tv_end.setTextColor(R.color.text_black_light);
								tv_type.setTextColor(R.color.text_black_light);
								togglestart
										.setBackgroundResource(R.drawable.ic_dropdown);
								toggleend
										.setBackgroundResource(R.drawable.ic_dropdown);
								toggletype
										.setBackgroundResource(R.drawable.ic_dropdown);

								if (SystemStatic.goodsStart == null) {
									Toast.makeText(getApplicationContext(),
											"请选择发货港进行筛选", Toast.LENGTH_SHORT)
											.show();

								} else if (SystemStatic.goodsType == null) {
									Toast.makeText(getApplicationContext(),
											"请选择货物类型筛选", Toast.LENGTH_SHORT)
											.show();
								} else if (SystemStatic.goodsTaget != null
										&& SystemStatic.goodsStart != null
										&& SystemStatic.goodsType != null) {
									GetGoodsListTask();
								}

							}
						});

				listview_start.setAdapter(fromAdapter);

				LinearLayout parent6 = (LinearLayout) this
						.findViewById(R.id.findgoods_view);// 父窗口view
				popupWindowArea = new PopupWindow(contentView,
						parent6.getWidth(), ViewGroup.LayoutParams.WRAP_CONTENT);
				// popupWindowArea.setFocusable(true);
				// popupWindowArea.setOutsideTouchable(true);

				popupWindowArea.setTouchable(true);
				popupWindowArea.setTouchInterceptor(new OnTouchListener() {

					@Override
					public boolean onTouch(View v, MotionEvent event) {
						// TODO Auto-generated method stub
						return false;
					}
				});

				WindowManager.LayoutParams lp6 = getWindow().getAttributes();
				lp6.alpha = 1f;
				getWindow().setAttributes(lp6);

				popupWindowArea.setOnDismissListener(new OnDismissListener() {

					@Override
					public void onDismiss() {
						WindowManager.LayoutParams lp = getWindow()
								.getAttributes();
						lp.alpha = 1f;
						getWindow().setAttributes(lp);
					}
				});

				popupWindowArea.showAsDropDown(liner_case, 0, 0);
				isStartOpen = true;
			} else {
				popupWindowArea.dismiss();
				isStartOpen = false;
				from_lists.clear();
				tv_start.setTextColor(R.color.text_black_light);
				tv_end.setTextColor(R.color.text_black_light);
				tv_type.setTextColor(R.color.text_black_light);
				togglestart.setBackgroundResource(R.drawable.ic_dropdown);
				toggleend.setBackgroundResource(R.drawable.ic_dropdown);
				toggletype.setBackgroundResource(R.drawable.ic_dropdown);
			}
			break;
		case R.id.relative_type:

			from_lists.clear();

			if (isStartOpen == false) {
				tv_start.setTextColor(R.color.text_black_light);
				tv_end.setTextColor(R.color.text_black_light);
				tv_type.setTextColor(getResources().getColor(R.color.blue));
				togglestart.setBackgroundResource(R.drawable.ic_dropdown);
				toggleend.setBackgroundResource(R.drawable.ic_dropdown);
				toggletype.setBackgroundResource(R.drawable.up);
				String ac0 = "不限";
				String ac1 = "液体货";
				String ac2 = "间杂货";
				String ac3 = "散货";
				from_lists.add(ac0);
				from_lists.add(ac1);
				from_lists.add(ac2);
				from_lists.add(ac3);

				contentView = getLayoutInflater().inflate(R.layout.pop_start,
						null);// 港口

				listview_start = (ListView) contentView
						.findViewById(R.id.listview_start);

				listview_start
						.setOnItemClickListener(new OnItemClickListener() {

							@Override
							public void onItemClick(AdapterView<?> parent,
									View view, int position, long id) {
								SystemStatic.goodsType = from_lists
										.get(position);
								popupWindowArea.dismiss();
								tv_start.setTextColor(R.color.text_black_light);
								tv_end.setTextColor(R.color.text_black_light);
								tv_type.setTextColor(R.color.text_black_light);
								togglestart
										.setBackgroundResource(R.drawable.ic_dropdown);
								toggleend
										.setBackgroundResource(R.drawable.ic_dropdown);
								toggletype
										.setBackgroundResource(R.drawable.ic_dropdown);

								if (SystemStatic.goodsStart == null) {
									Toast.makeText(getApplicationContext(),
											"请选择发货港进行筛选", Toast.LENGTH_SHORT)
											.show();

								} else if (SystemStatic.goodsTaget == null) {
									Toast.makeText(getApplicationContext(),
											"请选择卸货港进行筛选", Toast.LENGTH_SHORT)
											.show();
								} else if (SystemStatic.goodsTaget != null
										&& SystemStatic.goodsStart != null
										&& SystemStatic.goodsType != null) {
									GetGoodsListTask();
								}

							}
						});

				listview_start.setAdapter(fromAdapter);

				LinearLayout parent6 = (LinearLayout) this
						.findViewById(R.id.findgoods_view);// 父窗口view
				popupWindowArea = new PopupWindow(contentView,
						parent6.getWidth(), ViewGroup.LayoutParams.WRAP_CONTENT);
				// popupWindowArea.setFocusable(true);
				// popupWindowArea.setOutsideTouchable(true);

				popupWindowArea.setTouchable(true);
				popupWindowArea.setTouchInterceptor(new OnTouchListener() {

					@Override
					public boolean onTouch(View v, MotionEvent event) {
						// TODO Auto-generated method stub
						return false;
					}
				});

				WindowManager.LayoutParams lp6 = getWindow().getAttributes();
				lp6.alpha = 1f;
				getWindow().setAttributes(lp6);

				popupWindowArea.setOnDismissListener(new OnDismissListener() {

					@Override
					public void onDismiss() {
						WindowManager.LayoutParams lp = getWindow()
								.getAttributes();
						lp.alpha = 1f;
						getWindow().setAttributes(lp);
					}
				});

				popupWindowArea.showAsDropDown(liner_case, 0, 0);
				isStartOpen = true;
			} else {
				popupWindowArea.dismiss();
				isStartOpen = false;
				from_lists.clear();
				tv_start.setTextColor(R.color.text_black_light);
				tv_end.setTextColor(R.color.text_black_light);
				tv_type.setTextColor(R.color.text_black_light);
				togglestart.setBackgroundResource(R.drawable.ic_dropdown);
				toggleend.setBackgroundResource(R.drawable.ic_dropdown);
				toggletype.setBackgroundResource(R.drawable.ic_dropdown);
			}
			break;

		}

	}

	// 获取找货列表
	private void GetGoodsListTask() {

		// TODO Auto-generated method stub

		// 访问网络

		KJHttp kjh = new KJHttp();
		List<String> aa = new ArrayList<String>();
		aa.add("From=" + SystemStatic.goodsStart);
		aa.add("To=" + SystemStatic.goodsTaget);
		aa.add("Type=" + SystemStatic.goodsType);
		aa.add("Page=" + "0");

		HttpParams params = null;
		try {
			params = Util.prepareKJparams(aa);
		} catch (Exception e) {
			e.printStackTrace();
		}
		// 访问地址
		String toUrl = contants.goodslist;
		if (!toUrl.equals("")) {
			kjh.post(toUrl, params, false, new HttpCallBack() {
				@Override
				public void onSuccess(Map<String, String> headers, byte[] t) {
					super.onSuccess(headers, t);
					// 获取cookie
					KJLoger.debug("===" + headers.get("Set-Cookie"));
					// Log.i(TAG+":kymjs---http", new String(t));
					String result = new String(t).trim();
					try {
						JSONObject resultJO = new JSONObject(result);
						// String resultMsg = resultJO.getString("resultMsg");
						// Log.i(TAG+":kymjs---resultMsg", resultJO.toString());
						JSONObject res = new JSONObject(result);
						JSONArray data = res.getJSONArray("data");
						Log.i("GH_TEXT", data.length() + "我是数据的size");
						if (data.length() == 0) {
							Toast.makeText(getApplicationContext(), "最近无发布信息",
									Toast.LENGTH_SHORT).show();
							modellist.clear();
							goodsAdapter.notifyDataSetChanged();
						} else {
							modellist.clear();
							for (int i = 0; i < data.length(); i++) {
								JSONObject temp = data.getJSONObject(i);
								GoodsMode model = new GoodsMode();

								model.setid(temp.getString("id"));
								model.settitle(temp.getString("titile"));
								model.settype(temp.getString("type"));
								model.setname(temp.getString("name"));
								model.settons(temp.getString("tons"));
								model.setpackaging(temp.getString("packaging"));
								model.setstartport(temp.getString("startport"));
								model.setunloadport(temp
										.getString("unloadport"));
								model.setprice(temp.getString("price"));
								model.setlinkman(temp.getString("linkman"));
								model.settel(temp.getString("tel"));
								model.setremark(temp.getString("remark"));
								model.setpostdate(temp.getString("postdate"));

								// "id": 2,
								// "titile": "嘉兴拉货",
								// "type": "c",
								// "name": "沙子",
								// "tons": "5",
								// "packaging": "散装",
								// "startport": "a",
								// "unloadport": "b",
								// "price": "1000",
								// "linkman": "王三",
								// "tel": "139",
								// "remark": "备注",
								// "postdate": "2016-06-02 15:25:28"

								//
								//
								//
								modellist.add(model);

							}

							lv_find_goods.setAdapter(goodsAdapter);
						}
						// newsAdapter.pre(newslist);
					} catch (Exception e1) {
						e1.printStackTrace();
					}
				}

				@Override
				public void onFailure(int errorNo, String strMsg) {
					// 关闭进度条
					// Log.d(TAG, strMsg);
					// Util.getTip(cxt, errorNo+"");
					// mSVProgressHUD.showErrorWithStatus("验证过程出现问题");
					super.onFailure(errorNo, strMsg);
				}
			});
		}
	}

}
